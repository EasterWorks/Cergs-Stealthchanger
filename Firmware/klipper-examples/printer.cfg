[include mainsail.cfg] # assuming you use mainsail - if you use fluidd or another console, include the cfg's for that instead.

[mcu]
serial: your-mcu-address-goes-here
restart_method: command

[include stealthburner_leds.cfg]

[include Stealthchanger/nest.cfg]

[include Stealthchanger/tool_detection.cfg]
[include Stealthchanger/toolchanger.cfg]

[include Stealthchanger/t0.cfg]
[include Stealthchanger/t1.cfg]

[include Stealthchanger/homing.cfg]
[include Stealthchanger/calibrate-offsets.cfg]
[include Stealthchanger/stealthchanger_macros.cfg]
[include Stealthchanger/toolchanger-macros.cfg]

[exclude_object] # enables object exclusion in your slicer - comment out or remove if you don't want to use that

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 6500 
max_z_velocity: 15 # can be increased for 24v steppers
max_z_accel: 350
square_corner_velocity: 5.0

[force_move] # this lets you force axiis to move even when not homed. use with caution!
enable_force_move: True

[rounded_path]
resolution: 0.2 # the length of a circle approximation segments.
replace_g0: False # Use at your own risk

[input_shaper] # this must be here in order for Toolchanger to pipe through the new input shaper values when switching tools.

#####################################################################
#   X/Y Stepper Settings
#####################################################################
##  B Stepper - Left
##  Connected to MOTOR0
##  Endstop connected to DIAG0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: PG6
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 50   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR1
##  Endstop connected to DIAG1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: PG9
position_min: -10
position_endstop: 300
position_max: 300
homing_speed: 50  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left from viewer's perspective
##  Connected to MOTOR2_1
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: probe:z_virtual_endstop
#position_endstop:
homing_retract_dist: 2 # beacon doesn't use homing retract, setting to anything other than 0 will cause errors.
homing_positive_dir: false
position_max: 300
position_min: -5

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z1 Stepper - Rear Left  from viewer's perspective
##  Connected to MOTOR3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z2 Stepper - Rear Right from viewer's perspective
##  Connected to MOTOR4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z3 Stepper - Front Right from viewer's perspective
##  Connected to MOTOR5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: PA1
##  Validate the following thermistor type to make sure it is correct
##  Keenovo branded bed heaters should use Generic 3950
##  LDO branded bed heaters will have the sensor type labelled on the heater
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950 
sensor_pin: PF3
max_power: 0.6
min_temp: 0
max_temp: 120
control: pid
pid_Kp=40.328 
pid_Ki=1.054 
pid_Kd=385.633


#####################################################################
#   Fan Control
#####################################################################

[controller_fan controller_fan]
pin: PD12
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.5

#####################################################################
#   LED Control
#####################################################################

[output_pin caselight]
pin: PD15
pwm:true
shutdown_value: 0
value:0
cycle_time: 0.01

#####################################################################
#   Additional Sensors
#####################################################################

[thermistor CMFB103F3950FANT]
temperature1: 0.0
resistance1: 32116.0
temperature2: 40.0
resistance2: 5309.0
temperature3: 80.0
resistance3: 1228.0

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 48000

;[safe_z_home] 
;home_xy_position:150,150
;speed:100
;z_hop:3
;z_hop_speed:10

# speeds and values edited for OptoTAP
[bed_mesh]
speed: 600 #360 very safe speed
horizontal_move_z: 5
probe_count: 5,5
zero_reference_position: 150,150
mesh_min: 60, 30
mesh_max: 240,240

[quad_gantry_level]
gantry_corners:
   -60,-10
   360,370
##  Probe points
points:
   50,25
   50,225
   250,225
   250,25

speed: 600
horizontal_move_z: 5
retries: 20
retry_tolerance: 0.0250 #changed from 0.00750 temporarily for testing - change it back when your OptoTAPs are dialled in
max_adjust: 20


########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>


#####################################################################
#   Displays
#####################################################################

[display]
#  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
#  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#####################################################################
#   Macros
#####################################################################

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro CLEAN_NOZZLE] # make sure the coordinates here are edited to hit your particular nozzle brush placement and to call it when needed in toolchange macros.
variable_start_x: 280
variable_start_y: 299.5
variable_start_z: 0
variable_wipe_dist: -50
variable_wipe_qty: 5
variable_wipe_spd: 200
variable_raise_distance: 25

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 
 G90 # absolute positioning
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}

 ## Raise nozzle
 G1 Z{raise_distance}

[gcode_macro G32]
gcode:
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X150 Y150 Z30 F4000
       
[gcode_macro PRINT_START]
gcode:
    G28    #pre-print home
    CLEAN_NOZZLE #scrub the nozzle
    BED_MESH_CALIBRATE #mesh the bed
    G28 #home again after meshing
    G1 Z20 F3000                   ; move nozzle away from bed
    STATUS_PRINTING                ; change Stealthburner light status to STATUS_PRINTING
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro QUICK_STARTUP] # My personal quick-start macro for homing, QGL, parking Z, and pre-heating for ABS/ASA. Not needed for Toolchanger.
gcode:
    G28
    QUAD_GANTRY_LEVEL
    G91
    G1 Z+50 F1500
    G90
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110

##  the following two macros are from toolchanger

[gcode_macro M104]
rename_existing: M104.1
description: [T<index>] [S<temperature>]
  Set tool temperature.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set newparameters = "" %}
    {% set newparameters = newparameters ~ " T="~params.T %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE{newparameters}
  {% else %}
    M104.1 {rawparams}
  {% endif %}

[gcode_macro M109]
rename_existing: M109.1
description: [T<index>] [S<temperature>]
  Set tool temperature and wait.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set newparameters = "" %}
    {% set newparameters = newparameters ~ " T="~params.T %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE WAIT=1 {newparameters}
  {% else %}
    M109.1 {rawparams}
  {% endif %}

[gcode_macro _CLIENT_VARIABLE] # you MUST customize this for Stealthchanger/toolchanger use! As you can see below, I have mine configured to park at center of X and slightly forward from max on Y.
# NOTE: the retraction variables here are HUGE by default! you need to edit them here and in toolchanger_macros.cfg. I have mine set in total to retract 0.8mm of filament at the end of a print, or when a print is paused and cancelled.
variable_use_custom_pos   : True # use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 150   ; custom x position; value must be within your defined min and max of X 
variable_custom_park_y    : 280   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 10.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 2.0   ; the value to retract while PAUSE # this retracts 2mm of filament when pausing. probably need to reduce this.
variable_cancel_retract   : 2.0   ; the value to retract while CANCEL_PRINT # this retracts another 2mm of filament when cancelling. in the normal flow of pause print > cancel print in the mainsail UI, that pulls filament back 4MM. REDUCE.
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 2.0   ; the value to unretract while RESUME # change this to match variable_retract above after changing it.
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True # allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : 150.0  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : 280.0  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
#variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
gcode:


